openapi: 3.0.3
info:
    title: LFX V2 - Query Service
    description: Query indexed resources
    version: 0.0.1
servers:
    - url: http://localhost:80
      description: Default server for lfx-v2-query-service
paths:
    /query/orgs:
        get:
            tags:
                - query-svc
            summary: query-orgs query-svc
            description: Locate a single organization by name or domain.
            operationId: query-svc#query-orgs
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
                - name: name
                  in: query
                  description: Organization name
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Organization name
                    example: The Linux Foundation
                    minLength: 1
                  example: The Linux Foundation
                - name: domain
                  in: query
                  description: Organization domain or website URL
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Organization domain or website URL
                    example: linuxfoundation.org
                    pattern: ^[a-zA-Z0-9][a-zA-Z0-9-_.]*[a-zA-Z0-9]*\.[a-zA-Z]{2,}$
                  example: linuxfoundation.org
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Organization'
                            example:
                                domain: linuxfoundation.org
                                employees: 100-499
                                industry: Non-Profit
                                name: Linux Foundation
                                sector: Technology
                "400":
                    description: 'BadRequest: Bad request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "404":
                    description: 'NotFound: Not found'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                message: The requested resource was not found.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
    /query/orgs/suggest:
        get:
            tags:
                - query-svc
            summary: suggest-orgs query-svc
            description: Get organization suggestions for typeahead search based on a query.
            operationId: query-svc#suggest-orgs
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
                - name: query
                  in: query
                  description: Search query for organization suggestions
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Search query for organization suggestions
                    example: linux
                    minLength: 1
                  example: linux
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SuggestOrgsResponseBody'
                            example:
                                suggestions:
                                    - domain: linuxfoundation.org
                                      logo: https://example.com/logo.png
                                      name: Linux Foundation
                                    - domain: linuxfoundation.org
                                      logo: https://example.com/logo.png
                                      name: Linux Foundation
                                    - domain: linuxfoundation.org
                                      logo: https://example.com/logo.png
                                      name: Linux Foundation
                                    - domain: linuxfoundation.org
                                      logo: https://example.com/logo.png
                                      name: Linux Foundation
                "400":
                    description: 'BadRequest: Bad request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
    /query/resources:
        get:
            tags:
                - query-svc
            summary: query-resources query-svc
            description: Locate resources by their type or parent, or use typeahead search to query resources by a display name or similar alias.
            operationId: query-svc#query-resources
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
                - name: name
                  in: query
                  description: Resource name or alias; supports typeahead
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Resource name or alias; supports typeahead
                    example: gov board
                    minLength: 1
                  example: gov board
                - name: parent
                  in: query
                  description: Parent (for navigation; varies by object type)
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Parent (for navigation; varies by object type)
                    example: project:123
                    pattern: ^[a-zA-Z]+:[a-zA-Z0-9_-]+$
                  example: project:123
                - name: type
                  in: query
                  description: Resource type to search
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Resource type to search
                    example: committee
                  example: committee
                - name: tags
                  in: query
                  description: Tags to search (varies by object type)
                  allowEmptyValue: true
                  schema:
                    type: array
                    items:
                        type: string
                        example: Sequi doloribus voluptatem ipsa.
                    description: Tags to search (varies by object type)
                    example:
                        - active
                  example:
                    - active
                - name: sort
                  in: query
                  description: Sort order for results
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Sort order for results
                    default: name_asc
                    example: updated_desc
                    enum:
                        - name_asc
                        - name_desc
                        - updated_asc
                        - updated_desc
                  example: updated_desc
                - name: page_token
                  in: query
                  description: Opaque token for pagination
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Opaque token for pagination
                    example: '****'
                  example: '****'
            responses:
                "200":
                    description: OK response.
                    headers:
                        Cache-Control:
                            description: Cache control header
                            schema:
                                type: string
                                description: Cache control header
                                example: public, max-age=300
                            example: public, max-age=300
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QueryResourcesResponseBody'
                            example:
                                page_token: '****'
                                resources:
                                    - data:
                                        id: "123"
                                        name: My committee
                                        description: a committee
                                      id: "123"
                                      type: committee
                                    - data:
                                        id: "123"
                                        name: My committee
                                        description: a committee
                                      id: "123"
                                      type: committee
                                    - data:
                                        id: "123"
                                        name: My committee
                                        description: a committee
                                      id: "123"
                                      type: committee
                "400":
                    description: 'BadRequest: Bad request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                message: The request was invalid.
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
    /query/resources/count:
        get:
            tags:
                - query-svc
            summary: query-resources-count query-svc
            description: Count matching resources by query.
            operationId: query-svc#query-resources-count
            parameters:
                - name: v
                  in: query
                  description: Version of the API
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: Version of the API
                    example: "1"
                    enum:
                        - "1"
                  example: "1"
                - name: name
                  in: query
                  description: Resource name or alias; supports typeahead
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Resource name or alias; supports typeahead
                    example: gov board
                    minLength: 1
                  example: gov board
                - name: parent
                  in: query
                  description: Parent (for navigation; varies by object type)
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Parent (for navigation; varies by object type)
                    example: project:123
                  example: project:123
                - name: type
                  in: query
                  description: Resource type to search
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Resource type to search
                    example: committee
                  example: committee
                - name: tags
                  in: query
                  description: Tags to search (varies by object type)
                  allowEmptyValue: true
                  schema:
                    type: array
                    items:
                        type: string
                        example: Voluptatem nobis corporis aperiam.
                    description: Tags to search (varies by object type)
                    example:
                        - active
                  example:
                    - active
            responses:
                "200":
                    description: OK response.
                    headers:
                        Cache-Control:
                            description: Cache control header
                            schema:
                                type: string
                                description: Cache control header
                                example: public, max-age=300
                            example: public, max-age=300
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QueryResourcesCountResponseBody'
                            example:
                                count: 1234
                                has_more: false
                "400":
                    description: 'BadRequest: Bad request'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'InternalServerError: Internal server error'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: An internal server error occurred.
                "503":
                    description: 'ServiceUnavailable: Service unavailable'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServiceUnavailableError'
                            example:
                                message: The service is unavailable.
            security:
                - jwt_header_Authorization: []
components:
    schemas:
        BadRequestError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                    example: The request was invalid.
            example:
                message: The request was invalid.
            required:
                - message
        Error:
            type: object
            properties:
                fault:
                    type: boolean
                    description: Is the error a server-side fault?
                    example: true
                id:
                    type: string
                    description: ID is a unique identifier for this particular occurrence of the problem.
                    example: 123abc
                message:
                    type: string
                    description: Message is a human-readable explanation specific to this occurrence of the problem.
                    example: parameter 'p' must be an integer
                name:
                    type: string
                    description: Name is the name of this class of errors.
                    example: bad_request
                temporary:
                    type: boolean
                    description: Is the error temporary?
                    example: true
                timeout:
                    type: boolean
                    description: Is the error a timeout?
                    example: true
            description: Bad request
            example:
                fault: false
                id: 123abc
                message: parameter 'p' must be an integer
                name: bad_request
                temporary: false
                timeout: true
            required:
                - name
                - id
                - message
                - temporary
                - timeout
                - fault
        InternalServerError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                    example: An internal server error occurred.
            example:
                message: An internal server error occurred.
            required:
                - message
        NotFoundError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                    example: The requested resource was not found.
            example:
                message: The requested resource was not found.
            required:
                - message
        Organization:
            type: object
            properties:
                domain:
                    type: string
                    description: Organization domain
                    example: linuxfoundation.org
                employees:
                    type: string
                    description: Employee count or range
                    example: 100-499
                industry:
                    type: string
                    description: Organization industry classification
                    example: Non-Profit
                name:
                    type: string
                    description: Organization name
                    example: Linux Foundation
                sector:
                    type: string
                    description: Business sector classification
                    example: Technology
            description: An organization is a universal representation of an LFX API organization.
            example:
                domain: linuxfoundation.org
                employees: 100-499
                industry: Non-Profit
                name: Linux Foundation
                sector: Technology
        OrganizationSuggestion:
            type: object
            properties:
                domain:
                    type: string
                    description: Organization domain
                    example: linuxfoundation.org
                logo:
                    type: string
                    description: Organization logo URL
                    example: https://example.com/logo.png
                name:
                    type: string
                    description: Organization name
                    example: Linux Foundation
            description: An organization suggestion for the search.
            example:
                domain: linuxfoundation.org
                logo: https://example.com/logo.png
                name: Linux Foundation
            required:
                - name
                - domain
        QueryResourcesCountResponseBody:
            type: object
            properties:
                count:
                    type: integer
                    description: Count of resources found
                    example: 1234
                    format: int64
                has_more:
                    type: boolean
                    description: 'True if count is not guaranteed to be exhaustive: client should request a narrower query'
                    example: false
            example:
                count: 1234
                has_more: false
            required:
                - count
                - has_more
        QueryResourcesResponseBody:
            type: object
            properties:
                page_token:
                    type: string
                    description: Opaque token if more results are available
                    example: '****'
                resources:
                    type: array
                    items:
                        $ref: '#/components/schemas/Resource'
                    description: Resources found
                    example:
                        - data:
                            id: "123"
                            name: My committee
                            description: a committee
                          id: "123"
                          type: committee
                        - data:
                            id: "123"
                            name: My committee
                            description: a committee
                          id: "123"
                          type: committee
                        - data:
                            id: "123"
                            name: My committee
                            description: a committee
                          id: "123"
                          type: committee
            example:
                page_token: '****'
                resources:
                    - data:
                        id: "123"
                        name: My committee
                        description: a committee
                      id: "123"
                      type: committee
                    - data:
                        id: "123"
                        name: My committee
                        description: a committee
                      id: "123"
                      type: committee
                    - data:
                        id: "123"
                        name: My committee
                        description: a committee
                      id: "123"
                      type: committee
            required:
                - resources
        Resource:
            type: object
            properties:
                data:
                    description: Resource data snapshot
                    example:
                        id: "123"
                        name: My committee
                        description: a committee
                id:
                    type: string
                    description: Resource ID (within its resource collection)
                    example: "123"
                type:
                    type: string
                    description: Resource type
                    example: committee
            description: A resource is a universal representation of an LFX API resource for indexing.
            example:
                data:
                    id: "123"
                    name: My committee
                    description: a committee
                id: "123"
                type: committee
        ServiceUnavailableError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                    example: The service is unavailable.
            example:
                message: The service is unavailable.
            required:
                - message
        Sortable:
            type: object
            properties:
                page_token:
                    type: string
                    description: Opaque token for pagination
                    example: '****'
                sort:
                    type: string
                    description: Sort order for results
                    default: name_asc
                    example: updated_desc
                    enum:
                        - name_asc
                        - name_desc
                        - updated_asc
                        - updated_desc
            example:
                page_token: '****'
                sort: updated_desc
        SuggestOrgsResponseBody:
            type: object
            properties:
                suggestions:
                    type: array
                    items:
                        $ref: '#/components/schemas/OrganizationSuggestion'
                    description: Organization suggestions
                    example:
                        - domain: linuxfoundation.org
                          logo: https://example.com/logo.png
                          name: Linux Foundation
                        - domain: linuxfoundation.org
                          logo: https://example.com/logo.png
                          name: Linux Foundation
                        - domain: linuxfoundation.org
                          logo: https://example.com/logo.png
                          name: Linux Foundation
                        - domain: linuxfoundation.org
                          logo: https://example.com/logo.png
                          name: Linux Foundation
            example:
                suggestions:
                    - domain: linuxfoundation.org
                      logo: https://example.com/logo.png
                      name: Linux Foundation
                    - domain: linuxfoundation.org
                      logo: https://example.com/logo.png
                      name: Linux Foundation
            required:
                - suggestions
    securitySchemes:
        jwt_header_Authorization:
            type: http
            description: Heimdall authorization
            scheme: bearer
tags:
    - name: query-svc
      description: The query service provides resource and user queries.
