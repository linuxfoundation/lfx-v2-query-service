// Code generated by goa v3.21.1, DO NOT EDIT.
//
// query-svc service
//
// Command:
// $ goa gen github.com/linuxfoundation/lfx-v2-query-service/design

package querysvc

import (
	"context"

	goa "goa.design/goa/v3/pkg"
	"goa.design/goa/v3/security"
)

// The query service provides resource and user queries.
type Service interface {
	// Locate resources by their type or parent, or use typeahead search to query
	// resources by a display name or similar alias.
	QueryResources(context.Context, *QueryResourcesPayload) (res *QueryResourcesResult, err error)
	// Locate a single organization by name or domain.
	QueryOrgs(context.Context, *QueryOrgsPayload) (res *Organization, err error)
	// Check if the service is able to take inbound requests.
	Readyz(context.Context) (res []byte, err error)
	// Check if the service is alive.
	Livez(context.Context) (res []byte, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// JWTAuth implements the authorization logic for the JWT security scheme.
	JWTAuth(ctx context.Context, token string, schema *security.JWTScheme) (context.Context, error)
}

// APIName is the name of the API as defined in the design.
const APIName = "lfx-v2-query-service"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "query-svc"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [4]string{"query-resources", "query-orgs", "readyz", "livez"}

type BadRequestError struct {
	// Error message
	Message string
}

type InternalServerError struct {
	// Error message
	Message string
}

// Organization is the result type of the query-svc service query-orgs method.
type Organization struct {
	// Organization name
	Name *string
	// Organization domain
	Domain *string
	// Organization industry classification
	Industry *string
	// Business sector classification
	Sector *string
	// Employee count or range
	Employees *string
}

// QueryOrgsPayload is the payload type of the query-svc service query-orgs
// method.
type QueryOrgsPayload struct {
	// Token
	BearerToken string
	// Version of the API
	Version string
	// Organization name
	Name *string
	// Organization domain or website URL
	Domain *string
}

// QueryResourcesPayload is the payload type of the query-svc service
// query-resources method.
type QueryResourcesPayload struct {
	// Token
	BearerToken string
	// Version of the API
	Version string
	// Resource name or alias; supports typeahead
	Name *string
	// Parent (for navigation; varies by object type)
	Parent *string
	// Resource type to search
	Type *string
	// Tags to search (varies by object type)
	Tags []string
	// Sort order for results
	Sort string
	// Opaque token for pagination
	PageToken *string
}

// QueryResourcesResult is the result type of the query-svc service
// query-resources method.
type QueryResourcesResult struct {
	// Resources found
	Resources []*Resource
	// Opaque token if more results are available
	PageToken *string
	// Cache control header
	CacheControl *string
}

// A resource is a universal representation of an LFX API resource for indexing.
type Resource struct {
	// Resource type
	Type *string
	// Resource ID (within its resource collection)
	ID *string
	// Resource data snapshot
	Data any
}

type ServiceUnavailableError struct {
	// Error message
	Message string
}

// Error returns an error description.
func (e *BadRequestError) Error() string {
	return ""
}

// ErrorName returns "BadRequestError".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *BadRequestError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "BadRequestError".
func (e *BadRequestError) GoaErrorName() string {
	return "BadRequest"
}

// Error returns an error description.
func (e *InternalServerError) Error() string {
	return ""
}

// ErrorName returns "InternalServerError".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *InternalServerError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "InternalServerError".
func (e *InternalServerError) GoaErrorName() string {
	return "InternalServerError"
}

// Error returns an error description.
func (e *ServiceUnavailableError) Error() string {
	return ""
}

// ErrorName returns "ServiceUnavailableError".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e *ServiceUnavailableError) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "ServiceUnavailableError".
func (e *ServiceUnavailableError) GoaErrorName() string {
	return "ServiceUnavailable"
}

// MakeNotReady builds a goa.ServiceError from an error.
func MakeNotReady(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "NotReady", false, true, true)
}
